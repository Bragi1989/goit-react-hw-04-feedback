{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\goit-react-hw-04-feedback\\\\src\\\\components\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Section from './Section';\nimport FeedbackOptions from './FeedbackOptions';\nimport Statistics from './Statistics';\nimport Notification from './Notification';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [feedback, setFeedback] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0\n  });\n  const countTotalFeedback = () => {\n    const {\n      good,\n      neutral,\n      bad\n    } = feedback;\n    return good + neutral + bad;\n  };\n  const countPositiveFeedbackPercentage = () => {\n    const {\n      good\n    } = feedback;\n    const total = countTotalFeedback();\n    return total === 0 ? 0 : Math.round(good / total * 100);\n  };\n  const handleLeaveFeedback = option => {\n    setFeedback(prevFeedback => ({\n      ...prevFeedback,\n      [option]: prevFeedback[option] + 1\n    }));\n  };\n  const {\n    good,\n    neutral,\n    bad\n  } = feedback;\n  const totalFeedback = countTotalFeedback();\n  const positivePercentage = countPositiveFeedbackPercentage();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      title: \"Leave feedback\",\n      children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n        options: ['good', 'neutral', 'bad'],\n        onLeaveFeedback: handleLeaveFeedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), totalFeedback > 0 ? /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Statistics\",\n      children: /*#__PURE__*/_jsxDEV(Statistics, {\n        good: good,\n        neutral: neutral,\n        bad: bad,\n        total: totalFeedback,\n        positivePercentage: positivePercentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Notification, {\n      message: \"There is no feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"gP/qYUGDegoGzz09ZFtD0diRK3U=\");\n_c = App;\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired\n};\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired\n};\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired\n};\nNotification.propTypes = {\n  message: PropTypes.string.isRequired\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Section","FeedbackOptions","Statistics","Notification","PropTypes","jsxDEV","_jsxDEV","App","_s","feedback","setFeedback","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","total","Math","round","handleLeaveFeedback","option","prevFeedback","totalFeedback","positivePercentage","children","title","options","onLeaveFeedback","fileName","_jsxFileName","lineNumber","columnNumber","message","_c","propTypes","string","isRequired","node","arrayOf","func","number","$RefreshReg$"],"sources":["D:/GitHub/goit-react-hw-04-feedback/src/components/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Section from './Section';\r\nimport FeedbackOptions from './FeedbackOptions';\r\nimport Statistics from './Statistics';\r\nimport Notification from './Notification';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst App = () => {\r\n  const [feedback, setFeedback] = useState({ good: 0, neutral: 0, bad: 0 });\r\n\r\n  const countTotalFeedback = () => {\r\n    const { good, neutral, bad } = feedback;\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    const { good } = feedback;\r\n    const total = countTotalFeedback();\r\n    return total === 0 ? 0 : Math.round((good / total) * 100);\r\n  };\r\n\r\n  const handleLeaveFeedback = option => {\r\n    setFeedback(prevFeedback => ({ ...prevFeedback, [option]: prevFeedback[option] + 1 }));\r\n  };\r\n\r\n  const { good, neutral, bad } = feedback;\r\n  const totalFeedback = countTotalFeedback();\r\n  const positivePercentage = countPositiveFeedbackPercentage();\r\n\r\n  return (\r\n    <div>\r\n      <Section title=\"Leave feedback\">\r\n        <FeedbackOptions\r\n          options={['good', 'neutral', 'bad']}\r\n          onLeaveFeedback={handleLeaveFeedback}\r\n        />\r\n      </Section>\r\n\r\n      {totalFeedback > 0 ? (\r\n        <Section title=\"Statistics\">\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={totalFeedback}\r\n            positivePercentage={positivePercentage}\r\n          />\r\n        </Section>\r\n      ) : (\r\n        <Notification message=\"There is no feedback\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}