{"ast":null,"code":"var _jsxFileName = \"D:\\\\GitHub\\\\goit-react-hw-04-feedback\\\\src\\\\components\\\\FeedbackOptions.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedbackOptions = _ref => {\n  _s();\n  let {\n    options,\n    onLeaveFeedback\n  } = _ref;\n  const [selectedOption, setSelectedOption] = useState(null);\n  const handleButtonClick = option => {\n    setSelectedOption(option);\n    onLeaveFeedback(option);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => handleButtonClick(option),\n      style: {\n        fontWeight: option === selectedOption ? 'bold' : 'normal'\n      },\n      children: option\n    }, option, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedbackOptions, \"JA8CxE9ZrczvRffCFoauEAbBIYg=\");\n_c = FeedbackOptions;\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired\n};\nexport default FeedbackOptions;\nvar _c;\n$RefreshReg$(_c, \"FeedbackOptions\");","map":{"version":3,"names":["React","useState","PropTypes","jsxDEV","_jsxDEV","FeedbackOptions","_ref","_s","options","onLeaveFeedback","selectedOption","setSelectedOption","handleButtonClick","option","children","map","type","onClick","style","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","arrayOf","string","isRequired","func","$RefreshReg$"],"sources":["D:/GitHub/goit-react-hw-04-feedback/src/components/FeedbackOptions.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  const handleButtonClick = (option) => {\r\n    setSelectedOption(option);\r\n    onLeaveFeedback(option);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {options.map(option => (\r\n        <button\r\n          key={option}\r\n          type=\"button\"\r\n          onClick={() => handleButtonClick(option)}\r\n          style={{ fontWeight: option === selectedOption ? 'bold' : 'normal' }}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,eAAe,GAAGC,IAAA,IAAkC;EAAAC,EAAA;EAAA,IAAjC;IAAEC,OAAO;IAAEC;EAAgB,CAAC,GAAAH,IAAA;EACnD,MAAM,CAACI,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMW,iBAAiB,GAAIC,MAAM,IAAK;IACpCF,iBAAiB,CAACE,MAAM,CAAC;IACzBJ,eAAe,CAACI,MAAM,CAAC;EACzB,CAAC;EAED,oBACET,OAAA;IAAAU,QAAA,EACGN,OAAO,CAACO,GAAG,CAACF,MAAM,iBACjBT,OAAA;MAEEY,IAAI,EAAC,QAAQ;MACbC,OAAO,EAAEA,CAAA,KAAML,iBAAiB,CAACC,MAAM,CAAE;MACzCK,KAAK,EAAE;QAAEC,UAAU,EAAEN,MAAM,KAAKH,cAAc,GAAG,MAAM,GAAG;MAAS,CAAE;MAAAI,QAAA,EAEpED;IAAM,GALFA,MAAM;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAML,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAChB,EAAA,CAtBIF,eAAe;AAAAmB,EAAA,GAAfnB,eAAe;AAwBrBA,eAAe,CAACoB,SAAS,GAAG;EAC1BjB,OAAO,EAAEN,SAAS,CAACwB,OAAO,CAACxB,SAAS,CAACyB,MAAM,CAACC,UAAU,CAAC,CAACA,UAAU;EAClEnB,eAAe,EAAEP,SAAS,CAAC2B,IAAI,CAACD;AAClC,CAAC;AAED,eAAevB,eAAe;AAAC,IAAAmB,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module"}